use async_trait::async_trait;
use kafka_protocol::messages::{
    AddOffsetsToTxnRequest, AddPartitionsToTxnRequest, AllocateProducerIdsRequest, AlterClientQuotasRequest, AlterConfigsRequest, AlterPartitionReassignmentsRequest,
    AlterPartitionRequest, AlterReplicaLogDirsRequest, AlterUserScramCredentialsRequest, ApiVersionsRequest, AssignReplicasToDirsRequest, BeginQuorumEpochRequest,
    BrokerHeartbeatRequest, BrokerRegistrationRequest, ConsumerGroupDescribeRequest, ConsumerGroupHeartbeatRequest, ControlledShutdownRequest,
    ControllerRegistrationRequest, CreateAclsRequest, CreateDelegationTokenRequest, CreatePartitionsRequest, CreateTopicsRequest, DeleteAclsRequest, DeleteGroupsRequest,
    DeleteRecordsRequest, DeleteTopicsRequest, DescribeAclsRequest, DescribeClientQuotasRequest, DescribeClusterRequest, DescribeConfigsRequest,
    DescribeDelegationTokenRequest, DescribeGroupsRequest, DescribeLogDirsRequest, DescribeProducersRequest, DescribeQuorumRequest, DescribeTopicPartitionsRequest,
    DescribeTransactionsRequest, DescribeUserScramCredentialsRequest, ElectLeadersRequest, EndQuorumEpochRequest, EndTxnRequest, EnvelopeRequest,
    ExpireDelegationTokenRequest, FetchRequest, FetchSnapshotRequest, FindCoordinatorRequest, GetTelemetrySubscriptionsRequest, HeartbeatRequest,
    IncrementalAlterConfigsRequest, InitProducerIdRequest, JoinGroupRequest, LeaderAndIsrRequest, LeaveGroupRequest, ListClientMetricsResourcesRequest,
    ListGroupsRequest, ListOffsetsRequest, ListPartitionReassignmentsRequest, ListTransactionsRequest, MetadataRequest, OffsetCommitRequest, OffsetDeleteRequest,
    OffsetFetchRequest, OffsetForLeaderEpochRequest, ProduceRequest, PushTelemetryRequest, RenewDelegationTokenRequest, SaslAuthenticateRequest, SaslHandshakeRequest,
    StopReplicaRequest, SyncGroupRequest, TxnOffsetCommitRequest, UnregisterBrokerRequest, UpdateFeaturesRequest, UpdateMetadataRequest, VoteRequest,
    WriteTxnMarkersRequest,
};

#[derive(Debug, PartialEq, Clone)]
pub enum KafkaRequest {
    ProduceRequest(ProduceRequest),
    FetchRequest(FetchRequest),
    ListOffsetsRequest(ListOffsetsRequest),
    MetadataRequest(MetadataRequest),
    LeaderAndIsrRequest(LeaderAndIsrRequest),
    StopReplicaRequest(StopReplicaRequest),
    UpdateMetadataRequest(UpdateMetadataRequest),
    ControlledShutdownRequest(ControlledShutdownRequest),
    OffsetCommitRequest(OffsetCommitRequest),
    OffsetFetchRequest(OffsetFetchRequest),
    FindCoordinatorRequest(FindCoordinatorRequest),
    JoinGroupRequest(JoinGroupRequest),
    HeartbeatRequest(HeartbeatRequest),
    LeaveGroupRequest(LeaveGroupRequest),
    SyncGroupRequest(SyncGroupRequest),
    DescribeGroupsRequest(DescribeGroupsRequest),
    ListGroupsRequest(ListGroupsRequest),
    SaslHandshakeRequest(SaslHandshakeRequest),
    ApiVersionsRequest(ApiVersionsRequest),
    CreateTopicsRequest(CreateTopicsRequest),
    DeleteTopicsRequest(DeleteTopicsRequest),
    DeleteRecordsRequest(DeleteRecordsRequest),
    InitProducerIdRequest(InitProducerIdRequest),
    OffsetForLeaderEpochRequest(OffsetForLeaderEpochRequest),
    AddPartitionsToTxnRequest(AddPartitionsToTxnRequest),
    AddOffsetsToTxnRequest(AddOffsetsToTxnRequest),
    EndTxnRequest(EndTxnRequest),
    WriteTxnMarkersRequest(WriteTxnMarkersRequest),
    TxnOffsetCommitRequest(TxnOffsetCommitRequest),
    DescribeAclsRequest(DescribeAclsRequest),
    CreateAclsRequest(CreateAclsRequest),
    DeleteAclsRequest(DeleteAclsRequest),
    DescribeConfigsRequest(DescribeConfigsRequest),
    AlterConfigsRequest(AlterConfigsRequest),
    AlterReplicaLogDirsRequest(AlterReplicaLogDirsRequest),
    DescribeLogDirsRequest(DescribeLogDirsRequest),
    SaslAuthenticateRequest(SaslAuthenticateRequest),
    CreatePartitionsRequest(CreatePartitionsRequest),
    CreateDelegationTokenRequest(CreateDelegationTokenRequest),
    RenewDelegationTokenRequest(RenewDelegationTokenRequest),
    ExpireDelegationTokenRequest(ExpireDelegationTokenRequest),
    DescribeDelegationTokenRequest(DescribeDelegationTokenRequest),
    DeleteGroupsRequest(DeleteGroupsRequest),
    ElectLeadersRequest(ElectLeadersRequest),
    IncrementalAlterConfigsRequest(IncrementalAlterConfigsRequest),
    AlterPartitionReassignmentsRequest(AlterPartitionReassignmentsRequest),
    ListPartitionReassignmentsRequest(ListPartitionReassignmentsRequest),
    OffsetDeleteRequest(OffsetDeleteRequest),
    DescribeClientQuotasRequest(DescribeClientQuotasRequest),
    AlterClientQuotasRequest(AlterClientQuotasRequest),
    DescribeUserScramCredentialsRequest(DescribeUserScramCredentialsRequest),
    AlterUserScramCredentialsRequest(AlterUserScramCredentialsRequest),
    VoteRequest(VoteRequest),
    BeginQuorumEpochRequest(BeginQuorumEpochRequest),
    EndQuorumEpochRequest(EndQuorumEpochRequest),
    DescribeQuorumRequest(DescribeQuorumRequest),
    AlterPartitionRequest(AlterPartitionRequest),
    UpdateFeaturesRequest(UpdateFeaturesRequest),
    EnvelopeRequest(EnvelopeRequest),
    FetchSnapshotRequest(FetchSnapshotRequest),
    DescribeClusterRequest(DescribeClusterRequest),
    DescribeProducersRequest(DescribeProducersRequest),
    BrokerRegistrationRequest(BrokerRegistrationRequest),
    BrokerHeartbeatRequest(BrokerHeartbeatRequest),
    UnregisterBrokerRequest(UnregisterBrokerRequest),
    DescribeTransactionsRequest(DescribeTransactionsRequest),
    ListTransactionsRequest(ListTransactionsRequest),
    AllocateProducerIdsRequest(AllocateProducerIdsRequest),
    ConsumerGroupHeartbeatRequest(ConsumerGroupHeartbeatRequest),
    ConsumerGroupDescribeRequest(ConsumerGroupDescribeRequest),
    ControllerRegistrationRequest(ControllerRegistrationRequest),
    GetTelemetrySubscriptionsRequest(GetTelemetrySubscriptionsRequest),
    PushTelemetryRequest(PushTelemetryRequest),
    AssignReplicasToDirsRequest(AssignReplicasToDirsRequest),
    ListClientMetricsResourcesRequest(ListClientMetricsResourcesRequest),
    DescribeTopicPartitionsRequest(DescribeTopicPartitionsRequest),
}

#[async_trait]
impl<Writer: tokio::io::AsyncWrite + Send + Unpin + 'static, E: std::fmt::Debug> proto_tower_util::WriteTo<Writer, E> for KafkaRequest {
    async fn write_to(&self, writer: &mut Writer) -> Result<(), E> {
        todo!()
    }
}
